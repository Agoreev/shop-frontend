{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.5b3c795c2836999c567d.hot-update.js","sources":["webpack:///./components/items.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Item from \"./item\";\r\nimport Pagination from \"./Pagination\";\r\nimport { perPage } from \"../config\";\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n  max-width: ${(props) => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass items extends Component {\r\n  render() {\r\n    return (\r\n      <Center>\r\n        <p>Items</p>\r\n        <Pagination page={this.props.page}></Pagination>\r\n        <Query query={ALL_ITEMS_QUERY} variables={{ skip: 1, first: 1 }}>\r\n          {({ data, error, loading }) => {\r\n            if (loading) {\r\n              return <p>Loading</p>;\r\n            }\r\n            if (error) {\r\n              return <p>error</p>;\r\n            }\r\n            return (\r\n              <ItemsList>\r\n                {data.items.map((item) => {\r\n                  return <Item item={item} key={item.id}></Item>;\r\n                })}\r\n              </ItemsList>\r\n            );\r\n          }}\r\n        </Query>\r\n        <Pagination page={this.props.page}></Pagination>\r\n      </Center>\r\n    );\r\n  }\r\n}\r\nexport default items;\r\n\r\nexport { ALL_ITEMS_QUERY };\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1BA;AACA;AA2BA;;;;;A","sourceRoot":""}